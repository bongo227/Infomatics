{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Home"
        },
        {
            "location": "/#welcome-to-mkdocs",
            "text": "For full documentation visit  mkdocs.org .",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/#commands",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Commands"
        },
        {
            "location": "/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/",
            "text": "Propositonal Logic\n\n\nPropositions\n\n\n\n\nProposition\n\n\nA declarative sentence (declares a fact) that is either true or false.\n\n\n\n\n\n\n\n\n\n\nPropositon\n\n\nNot propositions\n\n\n\n\n\n\n\n\n\n\nIt is raining.\n\n\nWhat is the data?\n\n\n\n\n\n\n$\\pi = 1.23$\n\n\n$1 + x = 2$\n\n\n\n\n\n\n\n\nLogical operators\n\n\nFrom these propositions we can from new compound propositions with logical operators:\n\n\n\n\n\n\n\n\nOperation\n\n\nExample\n\n\nExplanation\n\n\n\n\n\n\n\n\n\n\nNegation\n\n\n$\\neg p$\n\n\nit is not the case that $p$\n\n\n\n\n\n\nConjunction\n\n\n$p \\land q$\n\n\nboth $p$ and $q$ must be true for $p \\land q$ to be true\n\n\n\n\n\n\nDisjunction\n\n\n$p \\lor q$\n\n\nFalse when both $p$ and $q$ are false, true otherwise\n\n\n\n\n\n\nExclusive Or\n\n\n$p \\oplus q$\n\n\nEither $p$ or $q$ must be true (\nnot both\n) for $p \\oplus q$ to be true\n\n\n\n\n\n\nImplication\n\n\n$p \\rightarrow q$\n\n\nFalse when $p$ is true and $q$ is false, true otherwise. $p$ is the hypothesis/antecedent and $q$ is the conclusion/conseqence\n\n\n\n\n\n\nBiconditional\n\n\n$p \\leftrightarrow q$\n\n\n$p$ if and only if $q$, true when both $p$ and $q$ have the same truth values\n\n\n\n\n\n\n\n\nTruth tables\n\n\nWith these logical operators we can build complex logical statements such as: $(p \\lor q) \\rightarrow (p \\land q)$. To construct truth tables for these expressions we start with the individual variables $p$ and $q$, and solve sub expressions until we reach the full expression.\n\n\n\n\n\n\\begin{array}{c|c|c|c|c|c}\np & q & \\neg q & p \\lor \\neg q & p \\land \\neg q & (p \\lor q) \\rightarrow (p \\land q) \\\\ \\hline\n\\top & \\top & \\bot & \\top & \\top & \\top \\\\\n\\top & \\bot & \\top & \\top & \\bot & \\bot \\\\\n\\bot & \\top & \\bot & \\bot & \\bot & \\top \\\\\n\\bot & \\bot & \\top & \\top & \\bot & \\bot \\\\\n\\end{array}\n\n\n\n\n\n\n\n\nOperator precedence\n\n\nThe order of which operators apply are as follows:\n\n\n\n\n\n\n\n\nOperator\n\n\nPrecedence\n\n\n\n\n\n\n\n\n\n\n$\\neg$\n\n\n1\n\n\n\n\n\n\n$\\land$\n\n\n2\n\n\n\n\n\n\n$\\lor$\n\n\n3\n\n\n\n\n\n\n$\\rightarrow$\n\n\n4\n\n\n\n\n\n\n$\\leftrightarrow$\n\n\n5\n\n\n\n\n\n\n\n\nLogical Equivalences\n\n\n\n\nTautology\n\n\nA compound proposition that is \ntrue\n, no matter what values the propositional variables hold.\n\n\nContradiction\n\n\nA compound proposition that is \nfalse\n, no matter what values the propositional variables hold.\n\n\nContingency\n\n\nCompound propositions that are neither a tautology or a contradiction.\n\n\n\n\n\n\n$p \\lor \\neg p$ is a tautology\n\n\n$p \\land \\neg p$ is a contradiction\n\n\n$p \\lor q$ is a contingency\n\n\n\n\nTwo compound propositions are \nlogically equivilent\n if they have the same truth values in all cases. This occors when $p \\leftrightarrow q$ is a tautology, where $p$ and $q$ are compound propositions. $p \\equiv q$ is a statement, denoting that $p$ and $q$ are logically equivilent.\n\n\nImportant Equivalences\n\n\n\n\n\n\n\n\nEquivalence\n\n\nName\n\n\n\n\n\n\n\n\n\n\n$p \\land \\top  \\equiv p \\\\ p \\lor \\bot \\equiv p $\n\n\nIdentity laws\n\n\n\n\n\n\n$p \\lor \\top  \\equiv \\top \\\\ p \\land \\bot \\equiv \\bot $\n\n\nDomination laws\n\n\n\n\n\n\n$p \\lor p \\equiv p \\\\ p \\land p \\equiv p$\n\n\nIdempotent laws\n\n\n\n\n\n\n$\u00ac\u00acp \\equiv p$\n\n\nDouble negation law\n\n\n\n\n\n\n$p \\lor q \\equiv q \\lor p \\\\ p \\land q \\equiv q \\land p$\n\n\nCommutative laws\n\n\n\n\n\n\n$(p \\lor q) \\lor r \\equiv p \\lor (q \\lor r) \\lor p \\\\ (p \\land q) \\land r \\equiv p \\land (q \\land r) \\land p$\n\n\nAssociative laws\n\n\n\n\n\n\n$p \\lor (q \\land r) \\equiv (p \\lor q) \\land (p \\lor r) \\\\ p \\land (q \\lor r) \\equiv (p \\land q) \\lor (p \\land r)$\n\n\nDistributive laws\n\n\n\n\n\n\n$\u00ac(p \\land q) \\equiv \u00acp \\lor \u00acq \\\\ \u00ac(p \\lor q) \\equiv \u00acp \\land \u00acq$\n\n\nDe Morgan's laws\n\n\n\n\n\n\n$p \\lor (p \\land q) \\equiv p \\\\ p \\land (p \\lor q) \\equiv p$\n\n\nAbsorption laws\n\n\n\n\n\n\n$p \\lor \u00acp \\equiv \\top \\\\ p \\land \u00acp \\equiv \\bot$\n\n\nNegation laws\n\n\n\n\n\n\n$ p \\rightarrow q \\equiv \u00acp \\lor q \\\\ p \\rightarrow q \\equiv \u00acq \\rightarrow \u00acp \\\\ p \\lor q \\equiv \u00acp \\rightarrow q \\\\ p \\land q \\equiv \u00ac(p \\rightarrow \u00acq) \\\\ \u00ac(p \\rightarrow q) \\equiv p \\land \u00acq \\\\ (p \\rightarrow q) \\land (p \\rightarrow r) \\equiv p \\rightarrow (q \\land r) \\\\ (p \\rightarrow q) \\lor (p \\rightarrow r) \\equiv p \\rightarrow (q \\lor r) \\\\ (p \\rightarrow r) \\land (q \\rightarrow r) \\equiv (p \\lor q) \\rightarrow r \\\\ (p \\rightarrow r) \\lor (q \\rightarrow r) \\equiv (p \\land q) \\rightarrow r $\n\n\nLogical equivalences involving conditional statements\n\n\n\n\n\n\n$ p \\leftrightarrow q \\equiv (p \\rightarrow q) \\land (q \\rightarrow p) \\\\ p \\leftrightarrow q \\equiv \u00acp \\leftrightarrow \u00acq\\\\ p \\leftrightarrow q \\equiv (p \\land q) \\lor (\u00acp \\land \u00acq)\\\\ \u00ac(p \\leftrightarrow q) \\equiv p \\leftrightarrow \u00acq $\n\n\nLogical equivalences involving biconditionals\n\n\n\n\n\n\n\n\nNotation\n\n\nSimular to $\\sum$, their exsists a notation for $\\lor$ and $\\land$.\n\n\np_0 \\lor p_1 \\lor ... \\lor p_n \\equiv \\bigvee^n_{i = 0}p_i\n\n\n\n\np_0 \\land p_1 \\land ... \\land p_n \\equiv \\bigwedge^n_{i = 0}p_i\n\n\n\n\n\nConstructing new logical equivalences\n\n\nUsing equivalences we already know, we can prove expressions are tautologys or that two expressions are logically equivelent. While a truth table could also be used, it is much shorted to apply laws.\n\n\n\n\nShow that $(p \\land q) \\rightarrow (p \\lor q)$ is a tautology.\n\n\n\\begin{align}\n(p \\land q) \\rightarrow (p \\lor q) &\\equiv \u00ac(p \\land q) \\lor (p \\lor q) & \\\\\n                               &\\equiv (\u00acp \\lor \u00acq) \\lor (p \\lor q) &\\text{De Morgan's Law} \\\\\n                               &\\equiv (\u00acp \\lor p) \\lor (\u00acq \\lor q) &\\text{Assosiative and Commutative Law} \\\\\n                               &\\equiv \\top \\lor \\top &\\text{Negation Law} \\\\\n                               &\\equiv \\top &\\text{Domination Law}\n\\end{align}\n\n\n\n\n\n\n\nSatisfaction\n\n\n\n\nSatisfiable\n\n\nA compound proposition were there \nis a\n assignment of truth values that make it true.\n\n\nUnsatisfiable\n\n\nA compound proposition were there \nis no\n assignment of truth values that make it true.\n\n\n\n\nThe values which make a compound proposition true is called the \nsolution to the satisfiability problem\n.\n\n\nPredicates and Quantifiers\n\n\nPredicates\n\n\nStatements that involve variables such as $x + 3 = y$ and $x > 1$ are undecided when their variables are not given a value. We need a more powerfull logic, \npredicate logic\n, to model these statements.\n\n\nWe turn the statement $x > 1$ into the predicate $P(x)$ where $P$ is $x > 1$. When we give $x$ a value, the statement becomes a proposition, e.g. $P(4)$ becomes $4 > 1$ which is $\\top$.\n\n\nA predicate can have any number of variables, $P(x_1, x_2, ..., x_n)$. A predicate with $n$ variables is called an $n$-ary predicate.\n\n\nQuantifiers\n\n\nAssigning variables is not the only way to form a proposition from a predicate. \nQuantification\n expresses the extend to which a predicate is true over a range.\n\n\n\n\n\n\n\n\nName\n\n\nExample\n\n\nNote\n\n\n\n\n\n\n\n\n\n\nUniversal quantifier\n\n\n$\\forall x P(x)$\n\n\nis true if $P(x)$ is true for all x (domain)\n\n\n\n\n\n\nExistential quantifier\n\n\n$\\exists x P(X)$\n\n\nis true if $P(x)$ is true for at least one value in the domain\n\n\n\n\n\n\n\n\n\n\nIs $\\forall x (x^2 > x)$ where the domain is all real numbers true.\n\n\nNo, if $x = \\frac{1}{2}$, $x^2 > x$) is false, thus not all elements in the domain make $x^2 > x$ true.\n\n\n\n\nRestricting the domain\n\n\nConsider $\\forall x (x^2 > 0)$ where the domain of $x$ is $x < 0$. We could express that as:\n\n\n\n\n\n\\forall x \\;(x < 0 \\rightarrow x^2 > 0)\n\n\n\n\n\nTheir is a shorter notation for restricting the domain\n\n\n\n\n\n\\forall x < 0 \\;(x^2 > 0)\n\n\n\n\n\nPrecedence of Quantifiers\n\n\n$\\forall$ and $\\exists$ have a higher precedence that all other logical operators.\n\n\nBinding Variables\n\n\nWhen a quantifier is used on variable, or the variable is assigned a value, the variable is said to be \nbound\n. Predicates must have all the variables bound to be turned into a proposition. Variables that are not bound are \nfree\n.\n\n\nThe \nscope\n of a quantifier is the part of the logical expression to which it is applied, hence variables outside of the scope of all quantifiers are free (if their value has not been assigned).\n\n\nLogical Equivalence\n\n\nTwo expressions involving predicates and quantifiers are equal if their truth values are the same throughout the domain.\n\n\n\n\nShow that $\\forall x (P(x) \\land Q(x))$ and $\\forall x P(x) \\land \\forall x Q(x)$ are logically equivalent.\n\n\n\n\nLet $a$ be some element in the domain, thus $P(a) \\land Q(a)$ must be $\\top$.\n\n\nIf $P(a) \\land Q(a)$ is $\\top$, $P(a)$ and $Q(a)$ must both be $\\top$.\n\n\nSince $P(a)$ and $Q(a)$ are $\\top$ for all element in the domain, $\\forall x P(x) \\land \\forall x Q(x)$ must also be $\\top$.\n\n\n\n\nSo\n\n\n\\forall x \\; (P(x) \\land Q(x)) \\equiv \\forall x \\; P(x) \\land \\forall x \\; Q(x)\n\n\n\n\n\n\n\nNegation\n\n\n\n\n\n\n\n\nStatement\n\n\nEquivalent\n\n\nNote\n\n\n\n\n\n\n\n\n\n\n$\u00ac\\forall x \\; P(x)$\n\n\n$\\exists x \\; \u00acP(x)$\n\n\nTheir is an $x$ for which $P(x)$ is $\\bot$\n\n\n\n\n\n\n$\u00ac\\exists x \\; P(x)$\n\n\n$\\forall x \\; \u00acP(x)$\n\n\nFor every $x$, $\u00acP(x)$ is $\\top$\n\n\n\n\n\n\n\n\n\n\nProve $\u00ac\\forall x \\; P(x) \\equiv \\exists x \\; \u00acP(x)$\n\n\n\n\n$\u00ac\\forall x \\; P(x)$ is $\\top$, if and only if $\\forall x \\; P(x)$ is $\\bot$\n\n\nIf $\\forall x \\; P(x)$ is $\\bot$, then their is atleast one element in the domain for which $\u00acP(x)$ is true.\n\n\nIt follows then the $\\exists x \\; \u00acP(x)$\n\n\n\n\n\n\nNested Quantifiers\n\n\nMore complex statements often involve more than one quantifier. For example the logical statement that \nif $x$ is positive and $y$ is negative, $xy$ is negative\n can be expressed as:\n\n\n\n\n\n\\forall x \\forall y \\; ((x > 0) \\land (y < 0) \\rightarrow (xy < 0))\n\n\n\n\n\nProof\n\n\nRules of Inference\n\n\nProofs are mathmatical arguments that determine the truth of a statement. \nBy an argument\n, means a sequence of statements that end in a conclusion. \nBy valid\n, means the conclusion must follow from the arguments. \nBy premise\n, means the argument is valid if and only if it is impossible for all premises to be true and the conclusion false.\n\n\nAn \nargument\n is propositional logic is a sequence of propositons, where the final proposition is the conclusion and all others are the premises. An \nargument form\n in propositional logic is a sequence of compound propositions that is \nvalid\n no matter what propositions are substitude for a premise, so long as the premises are true.\n\n\nThe \nmodus ponens\n (law of detachment) is one rule we can use to proof statements. \n\n\n(p \\land (p \\rightarrow q)) \\rightarrow q\n\n\n\n\n\n\n\nLet $p$ be \"it snows\" and $q$ be \"will go skiing\", if \"we will go skiing if it snows\" is \"we will go skiing\" true?\n\n\n\n\n\n\\begin{align}\n& p \\rightarrow q \\\\\n& p \\\\ \\hline\n\\therefore \\; & q\n\\end{align}\n\n\n\n\n\n\n\n\n\n\n\n\n\nRule of Inference\n\n\nTautology\n\n\nName\n\n\n\n\n\n\n\n\n\n\n\n\n\\begin{align} & p \\rightarrow q \\\\ & p \\\\ \\hline \\therefore \\; & q \\end{align}\n\n\n\n\n$(p \\land (p \\rightarrow q)) \\rightarrow q$\n\n\nModus ponens\n\n\n\n\n\n\n\n\n\\begin{align} & p \\rightarrow q \\\\ & \u00acq \\\\ \\hline \\therefore \\; & \u00acp \\end{align}\n\n\n\n\n$ (\u00acq \\land (p \\rightarrow q)) \\rightarrow \u00acp $\n\n\nModus tollens\n\n\n\n\n\n\n\n\n\\begin{align} & p \\rightarrow q \\\\ & q \\rightarrow r \\\\ \\hline \\therefore \\; & p \\rightarrow r \\end{align}\n\n\n\n\n$ ((p \\rightarrow q) \\land (q \\rightarrow r)) \\rightarrow (p \\rightarrow r) $\n\n\nHypothetical syllogism\n\n\n\n\n\n\n\n\n\\begin{align} & p \\lor q \\\\ & \u00acp \\\\ \\hline \\therefore \\; & q \\end{align}\n\n\n\n\n$ ((p \\lor q) \\land \u00acp) \\rightarrow q $\n\n\nDisjunctive syllogism\n\n\n\n\n\n\n\n\n\\begin{align} & p \\\\ \\hline \\therefore \\; & p \\lor q \\end{align}\n\n\n\n\n$ p \\rightarrow (p \\lor q) $\n\n\nAddition\n\n\n\n\n\n\n\n\n\\begin{align} & p \\land q \\\\ \\hline \\therefore \\; & p \\end{align}\n\n\n\n\n$ (p \\land q) \\rightarrow p $\n\n\nSimplification\n\n\n\n\n\n\n\n\n\\begin{align} & p \\\\ & q \\\\ \\hline \\therefore \\; & p \\land q \\end{align}\n\n\n\n\n$ ((p) \\land (q)) \\rightarrow (p \\land q) $\n\n\nConjunction\n\n\n\n\n\n\n\n\n\\begin{align} & p \\lor q \\\\ & \u00acp \\lor r \\\\ \\hline \\therefore \\; & q \\lor r \\end{align}\n\n\n\n\n$ ((p \\lor q) \\land (\u00acp \\lor r)) \\rightarrow (q \\lor r) $\n\n\nResolution\n\n\n\n\n\n\n\n\nUsing Rules of Inference to Build Arguments\n\n\n\n\nGiven the premesis: $\u00acp \\land q$, $r \\rightarrow p$, $\u00acr \\rightarrow s$, $s \\rightarrow t$ find an argument that shows the premisies lead to the conclusion $t$.\n\n\n\n\n\n\\begin{align}\n1)\\quad & \u00acp \\land q & \\text{premise} \\\\\n2)\\quad & \u00acp & \\text{simplification (1)} \\\\\n3)\\quad & r \\rightarrow p & \\text{premise} \\\\\n4)\\quad & \u00acr & \\text{modus tollens (2)(3)} \\\\\n5)\\quad & \u00acr \\rightarrow s & \\text{premise} \\\\\n6)\\quad & s & \\text{modus ponens (4)(5)} \\\\\n7)\\quad & s \\rightarrow t & \\text{premise} \\\\\n8)\\quad & t & \\text{modus ponens (6)(7)}\n\\end{align}\n\n\n\n\n\n\n\nFallacies\n\n\n$(p \\land (p \\rightarrow q)) \\rightarrow q$ is a tautology, fallacies often look like tautologys but are just contingencies:\n\n\n\n\nFallacy of affirming the conclusion\n\n\noccors when $(q \\land (p \\rightarrow q)) \\rightarrow p$ is treated as a tautology, but it is false when $p$ is false and $q$ is true.\n\n\nFallacy of denying the hypothesis\n\n\noccors when $(\u00acp \\land (p \\rightarrow q)) \\rightarrow \u00acq$ is treated as a tautology, but it is false when $p$ is false and $q$ is true.\n\n\n\n\nRules of Inference for Quantified Statements\n\n\n\n\n\n\n\n\nRule of Inference\n\n\nName\n\n\nNotes\n\n\n\n\n\n\n\n\n\n\n\n\n\\begin{align} & \\forall x P(x) \\\\ \\hline \\therefore \\; & P(c) \\end{align}\n\n\n\n\nUniversal instantiation\n\n\n$P(c)$ is true, where $c$ is an element of the domain, since all elements are true.\n\n\n\n\n\n\n\n\n\\begin{align} & P(c) \\\\ \\hline \\therefore \\; & \\forall x P(x) \\end{align}\n\n\n\n\nUniversal generalization\n\n\n$\\forall x P(x)$ is true, if $P(c)$ (where $c$ is an arbitary element in the domain) is true. Since we do not make any assumptions about $c$, other than its an element of the domain, all values of the domain must be true.\n\n\n\n\n\n\n\n\n\\begin{align} & \\exists x P(x) \\\\ \\hline \\therefore \\; & P(c) \\end{align}\n\n\n\n\nExistential instantiation\n\n\nTheir is an element $c$ in the domain that makes $P$ true. Note $c$ is not arbitary since some elements in the domain do not make $P$ true.\n\n\n\n\n\n\n\n\n\\begin{align} & P(c) \\\\ \\hline \\therefore \\; & \\exists x P(x) \\end{align}\n\n\n\n\nExistential generalization\n\n\nIf we know one element $c$ in the domain that makes $P$ true, then it follows that $\\exists x P(x)$\n\n\n\n\n\n\n\n\n\n\nShow that the premesis \"A student in the class has not read the book\" and \"Everyone in the class passed the exam\" implys the conclusion that \"Someone who passed the exam had not read the book\"\n\n\n\n\nLet $C(x)$ be \"$x$ is in the class\"\n\n\nLet $P(x)$ be \"$x$ passed the exam\"\n\n\nLet $B(x)$ be \"$x$ has read the book\"\n\n\n\n\n\n\n\n\\begin{align}\n(1)\\quad & \\exists x (C(x) \\land \u00acB(x)) && \\text{Premise} \\\\\n(2)\\quad & C(a) \\land \u00acB(a) && \\text{Existential instantiation (1)} \\\\\n(3)\\quad & C(a) && \\text{Simplification (2)} \\\\\n(4)\\quad & \\forall x (C(x) \\rightarrow P(x)) && \\text{Premise} \\\\\n(5)\\quad & C(a) \\rightarrow P(a) && \\text{Universal instantiation (4)} \\\\\n(6)\\quad & P(a) && \\text{Modus ponens (3, 5)} \\\\\n(7)\\quad & \u00acB(a) && \\text{Simplification (2)} \\\\\n(8)\\quad & P(a) \\land \u00acB(a) && \\text{Conjunction (6, 7)} \\\\\n(9)\\quad & \\exists x (P(x) \\land \u00acB(x)) && \\text{Existential generalization (8)}\n\\end{align}",
            "title": "Discrete Mathmatics and Mathmatical Reasoning"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#propositonal-logic",
            "text": "",
            "title": "Propositonal Logic"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#propositions",
            "text": "Proposition  A declarative sentence (declares a fact) that is either true or false.      Propositon  Not propositions      It is raining.  What is the data?    $\\pi = 1.23$  $1 + x = 2$",
            "title": "Propositions"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#logical-operators",
            "text": "From these propositions we can from new compound propositions with logical operators:     Operation  Example  Explanation      Negation  $\\neg p$  it is not the case that $p$    Conjunction  $p \\land q$  both $p$ and $q$ must be true for $p \\land q$ to be true    Disjunction  $p \\lor q$  False when both $p$ and $q$ are false, true otherwise    Exclusive Or  $p \\oplus q$  Either $p$ or $q$ must be true ( not both ) for $p \\oplus q$ to be true    Implication  $p \\rightarrow q$  False when $p$ is true and $q$ is false, true otherwise. $p$ is the hypothesis/antecedent and $q$ is the conclusion/conseqence    Biconditional  $p \\leftrightarrow q$  $p$ if and only if $q$, true when both $p$ and $q$ have the same truth values",
            "title": "Logical operators"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#truth-tables",
            "text": "With these logical operators we can build complex logical statements such as: $(p \\lor q) \\rightarrow (p \\land q)$. To construct truth tables for these expressions we start with the individual variables $p$ and $q$, and solve sub expressions until we reach the full expression.   \n\\begin{array}{c|c|c|c|c|c}\np & q & \\neg q & p \\lor \\neg q & p \\land \\neg q & (p \\lor q) \\rightarrow (p \\land q) \\\\ \\hline\n\\top & \\top & \\bot & \\top & \\top & \\top \\\\\n\\top & \\bot & \\top & \\top & \\bot & \\bot \\\\\n\\bot & \\top & \\bot & \\bot & \\bot & \\top \\\\\n\\bot & \\bot & \\top & \\top & \\bot & \\bot \\\\\n\\end{array}",
            "title": "Truth tables"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#operator-precedence",
            "text": "The order of which operators apply are as follows:     Operator  Precedence      $\\neg$  1    $\\land$  2    $\\lor$  3    $\\rightarrow$  4    $\\leftrightarrow$  5",
            "title": "Operator precedence"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#logical-equivalences",
            "text": "Tautology  A compound proposition that is  true , no matter what values the propositional variables hold.  Contradiction  A compound proposition that is  false , no matter what values the propositional variables hold.  Contingency  Compound propositions that are neither a tautology or a contradiction.    $p \\lor \\neg p$ is a tautology  $p \\land \\neg p$ is a contradiction  $p \\lor q$ is a contingency   Two compound propositions are  logically equivilent  if they have the same truth values in all cases. This occors when $p \\leftrightarrow q$ is a tautology, where $p$ and $q$ are compound propositions. $p \\equiv q$ is a statement, denoting that $p$ and $q$ are logically equivilent.",
            "title": "Logical Equivalences"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#important-equivalences",
            "text": "Equivalence  Name      $p \\land \\top  \\equiv p \\\\ p \\lor \\bot \\equiv p $  Identity laws    $p \\lor \\top  \\equiv \\top \\\\ p \\land \\bot \\equiv \\bot $  Domination laws    $p \\lor p \\equiv p \\\\ p \\land p \\equiv p$  Idempotent laws    $\u00ac\u00acp \\equiv p$  Double negation law    $p \\lor q \\equiv q \\lor p \\\\ p \\land q \\equiv q \\land p$  Commutative laws    $(p \\lor q) \\lor r \\equiv p \\lor (q \\lor r) \\lor p \\\\ (p \\land q) \\land r \\equiv p \\land (q \\land r) \\land p$  Associative laws    $p \\lor (q \\land r) \\equiv (p \\lor q) \\land (p \\lor r) \\\\ p \\land (q \\lor r) \\equiv (p \\land q) \\lor (p \\land r)$  Distributive laws    $\u00ac(p \\land q) \\equiv \u00acp \\lor \u00acq \\\\ \u00ac(p \\lor q) \\equiv \u00acp \\land \u00acq$  De Morgan's laws    $p \\lor (p \\land q) \\equiv p \\\\ p \\land (p \\lor q) \\equiv p$  Absorption laws    $p \\lor \u00acp \\equiv \\top \\\\ p \\land \u00acp \\equiv \\bot$  Negation laws    $ p \\rightarrow q \\equiv \u00acp \\lor q \\\\ p \\rightarrow q \\equiv \u00acq \\rightarrow \u00acp \\\\ p \\lor q \\equiv \u00acp \\rightarrow q \\\\ p \\land q \\equiv \u00ac(p \\rightarrow \u00acq) \\\\ \u00ac(p \\rightarrow q) \\equiv p \\land \u00acq \\\\ (p \\rightarrow q) \\land (p \\rightarrow r) \\equiv p \\rightarrow (q \\land r) \\\\ (p \\rightarrow q) \\lor (p \\rightarrow r) \\equiv p \\rightarrow (q \\lor r) \\\\ (p \\rightarrow r) \\land (q \\rightarrow r) \\equiv (p \\lor q) \\rightarrow r \\\\ (p \\rightarrow r) \\lor (q \\rightarrow r) \\equiv (p \\land q) \\rightarrow r $  Logical equivalences involving conditional statements    $ p \\leftrightarrow q \\equiv (p \\rightarrow q) \\land (q \\rightarrow p) \\\\ p \\leftrightarrow q \\equiv \u00acp \\leftrightarrow \u00acq\\\\ p \\leftrightarrow q \\equiv (p \\land q) \\lor (\u00acp \\land \u00acq)\\\\ \u00ac(p \\leftrightarrow q) \\equiv p \\leftrightarrow \u00acq $  Logical equivalences involving biconditionals",
            "title": "Important Equivalences"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#notation",
            "text": "Simular to $\\sum$, their exsists a notation for $\\lor$ and $\\land$. \np_0 \\lor p_1 \\lor ... \\lor p_n \\equiv \\bigvee^n_{i = 0}p_i  \np_0 \\land p_1 \\land ... \\land p_n \\equiv \\bigwedge^n_{i = 0}p_i",
            "title": "Notation"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#constructing-new-logical-equivalences",
            "text": "Using equivalences we already know, we can prove expressions are tautologys or that two expressions are logically equivelent. While a truth table could also be used, it is much shorted to apply laws.   Show that $(p \\land q) \\rightarrow (p \\lor q)$ is a tautology. \n\\begin{align}\n(p \\land q) \\rightarrow (p \\lor q) &\\equiv \u00ac(p \\land q) \\lor (p \\lor q) & \\\\\n                               &\\equiv (\u00acp \\lor \u00acq) \\lor (p \\lor q) &\\text{De Morgan's Law} \\\\\n                               &\\equiv (\u00acp \\lor p) \\lor (\u00acq \\lor q) &\\text{Assosiative and Commutative Law} \\\\\n                               &\\equiv \\top \\lor \\top &\\text{Negation Law} \\\\\n                               &\\equiv \\top &\\text{Domination Law}\n\\end{align}",
            "title": "Constructing new logical equivalences"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#satisfaction",
            "text": "Satisfiable  A compound proposition were there  is a  assignment of truth values that make it true.  Unsatisfiable  A compound proposition were there  is no  assignment of truth values that make it true.   The values which make a compound proposition true is called the  solution to the satisfiability problem .",
            "title": "Satisfaction"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#predicates-and-quantifiers",
            "text": "",
            "title": "Predicates and Quantifiers"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#predicates",
            "text": "Statements that involve variables such as $x + 3 = y$ and $x > 1$ are undecided when their variables are not given a value. We need a more powerfull logic,  predicate logic , to model these statements.  We turn the statement $x > 1$ into the predicate $P(x)$ where $P$ is $x > 1$. When we give $x$ a value, the statement becomes a proposition, e.g. $P(4)$ becomes $4 > 1$ which is $\\top$.  A predicate can have any number of variables, $P(x_1, x_2, ..., x_n)$. A predicate with $n$ variables is called an $n$-ary predicate.",
            "title": "Predicates"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#quantifiers",
            "text": "Assigning variables is not the only way to form a proposition from a predicate.  Quantification  expresses the extend to which a predicate is true over a range.     Name  Example  Note      Universal quantifier  $\\forall x P(x)$  is true if $P(x)$ is true for all x (domain)    Existential quantifier  $\\exists x P(X)$  is true if $P(x)$ is true for at least one value in the domain      Is $\\forall x (x^2 > x)$ where the domain is all real numbers true.  No, if $x = \\frac{1}{2}$, $x^2 > x$) is false, thus not all elements in the domain make $x^2 > x$ true.",
            "title": "Quantifiers"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#restricting-the-domain",
            "text": "Consider $\\forall x (x^2 > 0)$ where the domain of $x$ is $x < 0$. We could express that as:   \n\\forall x \\;(x < 0 \\rightarrow x^2 > 0)   Their is a shorter notation for restricting the domain   \n\\forall x < 0 \\;(x^2 > 0)",
            "title": "Restricting the domain"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#precedence-of-quantifiers",
            "text": "$\\forall$ and $\\exists$ have a higher precedence that all other logical operators.",
            "title": "Precedence of Quantifiers"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#binding-variables",
            "text": "When a quantifier is used on variable, or the variable is assigned a value, the variable is said to be  bound . Predicates must have all the variables bound to be turned into a proposition. Variables that are not bound are  free .  The  scope  of a quantifier is the part of the logical expression to which it is applied, hence variables outside of the scope of all quantifiers are free (if their value has not been assigned).",
            "title": "Binding Variables"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#logical-equivalence",
            "text": "Two expressions involving predicates and quantifiers are equal if their truth values are the same throughout the domain.   Show that $\\forall x (P(x) \\land Q(x))$ and $\\forall x P(x) \\land \\forall x Q(x)$ are logically equivalent.   Let $a$ be some element in the domain, thus $P(a) \\land Q(a)$ must be $\\top$.  If $P(a) \\land Q(a)$ is $\\top$, $P(a)$ and $Q(a)$ must both be $\\top$.  Since $P(a)$ and $Q(a)$ are $\\top$ for all element in the domain, $\\forall x P(x) \\land \\forall x Q(x)$ must also be $\\top$.   So \n\\forall x \\; (P(x) \\land Q(x)) \\equiv \\forall x \\; P(x) \\land \\forall x \\; Q(x)",
            "title": "Logical Equivalence"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#negation",
            "text": "Statement  Equivalent  Note      $\u00ac\\forall x \\; P(x)$  $\\exists x \\; \u00acP(x)$  Their is an $x$ for which $P(x)$ is $\\bot$    $\u00ac\\exists x \\; P(x)$  $\\forall x \\; \u00acP(x)$  For every $x$, $\u00acP(x)$ is $\\top$      Prove $\u00ac\\forall x \\; P(x) \\equiv \\exists x \\; \u00acP(x)$   $\u00ac\\forall x \\; P(x)$ is $\\top$, if and only if $\\forall x \\; P(x)$ is $\\bot$  If $\\forall x \\; P(x)$ is $\\bot$, then their is atleast one element in the domain for which $\u00acP(x)$ is true.  It follows then the $\\exists x \\; \u00acP(x)$",
            "title": "Negation"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#nested-quantifiers",
            "text": "More complex statements often involve more than one quantifier. For example the logical statement that  if $x$ is positive and $y$ is negative, $xy$ is negative  can be expressed as:   \n\\forall x \\forall y \\; ((x > 0) \\land (y < 0) \\rightarrow (xy < 0))",
            "title": "Nested Quantifiers"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#proof",
            "text": "",
            "title": "Proof"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#rules-of-inference",
            "text": "Proofs are mathmatical arguments that determine the truth of a statement.  By an argument , means a sequence of statements that end in a conclusion.  By valid , means the conclusion must follow from the arguments.  By premise , means the argument is valid if and only if it is impossible for all premises to be true and the conclusion false.  An  argument  is propositional logic is a sequence of propositons, where the final proposition is the conclusion and all others are the premises. An  argument form  in propositional logic is a sequence of compound propositions that is  valid  no matter what propositions are substitude for a premise, so long as the premises are true.  The  modus ponens  (law of detachment) is one rule we can use to proof statements.  \n(p \\land (p \\rightarrow q)) \\rightarrow q    Let $p$ be \"it snows\" and $q$ be \"will go skiing\", if \"we will go skiing if it snows\" is \"we will go skiing\" true?   \n\\begin{align}\n& p \\rightarrow q \\\\\n& p \\\\ \\hline\n\\therefore \\; & q\n\\end{align}       Rule of Inference  Tautology  Name       \\begin{align} & p \\rightarrow q \\\\ & p \\\\ \\hline \\therefore \\; & q \\end{align}   $(p \\land (p \\rightarrow q)) \\rightarrow q$  Modus ponens     \\begin{align} & p \\rightarrow q \\\\ & \u00acq \\\\ \\hline \\therefore \\; & \u00acp \\end{align}   $ (\u00acq \\land (p \\rightarrow q)) \\rightarrow \u00acp $  Modus tollens     \\begin{align} & p \\rightarrow q \\\\ & q \\rightarrow r \\\\ \\hline \\therefore \\; & p \\rightarrow r \\end{align}   $ ((p \\rightarrow q) \\land (q \\rightarrow r)) \\rightarrow (p \\rightarrow r) $  Hypothetical syllogism     \\begin{align} & p \\lor q \\\\ & \u00acp \\\\ \\hline \\therefore \\; & q \\end{align}   $ ((p \\lor q) \\land \u00acp) \\rightarrow q $  Disjunctive syllogism     \\begin{align} & p \\\\ \\hline \\therefore \\; & p \\lor q \\end{align}   $ p \\rightarrow (p \\lor q) $  Addition     \\begin{align} & p \\land q \\\\ \\hline \\therefore \\; & p \\end{align}   $ (p \\land q) \\rightarrow p $  Simplification     \\begin{align} & p \\\\ & q \\\\ \\hline \\therefore \\; & p \\land q \\end{align}   $ ((p) \\land (q)) \\rightarrow (p \\land q) $  Conjunction     \\begin{align} & p \\lor q \\\\ & \u00acp \\lor r \\\\ \\hline \\therefore \\; & q \\lor r \\end{align}   $ ((p \\lor q) \\land (\u00acp \\lor r)) \\rightarrow (q \\lor r) $  Resolution",
            "title": "Rules of Inference"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#using-rules-of-inference-to-build-arguments",
            "text": "Given the premesis: $\u00acp \\land q$, $r \\rightarrow p$, $\u00acr \\rightarrow s$, $s \\rightarrow t$ find an argument that shows the premisies lead to the conclusion $t$.   \n\\begin{align}\n1)\\quad & \u00acp \\land q & \\text{premise} \\\\\n2)\\quad & \u00acp & \\text{simplification (1)} \\\\\n3)\\quad & r \\rightarrow p & \\text{premise} \\\\\n4)\\quad & \u00acr & \\text{modus tollens (2)(3)} \\\\\n5)\\quad & \u00acr \\rightarrow s & \\text{premise} \\\\\n6)\\quad & s & \\text{modus ponens (4)(5)} \\\\\n7)\\quad & s \\rightarrow t & \\text{premise} \\\\\n8)\\quad & t & \\text{modus ponens (6)(7)}\n\\end{align}",
            "title": "Using Rules of Inference to Build Arguments"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#fallacies",
            "text": "$(p \\land (p \\rightarrow q)) \\rightarrow q$ is a tautology, fallacies often look like tautologys but are just contingencies:   Fallacy of affirming the conclusion  occors when $(q \\land (p \\rightarrow q)) \\rightarrow p$ is treated as a tautology, but it is false when $p$ is false and $q$ is true.  Fallacy of denying the hypothesis  occors when $(\u00acp \\land (p \\rightarrow q)) \\rightarrow \u00acq$ is treated as a tautology, but it is false when $p$ is false and $q$ is true.",
            "title": "Fallacies"
        },
        {
            "location": "/Discrete-Mathmatics-and-Mathmatical-Reasoning/#rules-of-inference-for-quantified-statements",
            "text": "Rule of Inference  Name  Notes       \\begin{align} & \\forall x P(x) \\\\ \\hline \\therefore \\; & P(c) \\end{align}   Universal instantiation  $P(c)$ is true, where $c$ is an element of the domain, since all elements are true.     \\begin{align} & P(c) \\\\ \\hline \\therefore \\; & \\forall x P(x) \\end{align}   Universal generalization  $\\forall x P(x)$ is true, if $P(c)$ (where $c$ is an arbitary element in the domain) is true. Since we do not make any assumptions about $c$, other than its an element of the domain, all values of the domain must be true.     \\begin{align} & \\exists x P(x) \\\\ \\hline \\therefore \\; & P(c) \\end{align}   Existential instantiation  Their is an element $c$ in the domain that makes $P$ true. Note $c$ is not arbitary since some elements in the domain do not make $P$ true.     \\begin{align} & P(c) \\\\ \\hline \\therefore \\; & \\exists x P(x) \\end{align}   Existential generalization  If we know one element $c$ in the domain that makes $P$ true, then it follows that $\\exists x P(x)$      Show that the premesis \"A student in the class has not read the book\" and \"Everyone in the class passed the exam\" implys the conclusion that \"Someone who passed the exam had not read the book\"   Let $C(x)$ be \"$x$ is in the class\"  Let $P(x)$ be \"$x$ passed the exam\"  Let $B(x)$ be \"$x$ has read the book\"    \n\\begin{align}\n(1)\\quad & \\exists x (C(x) \\land \u00acB(x)) && \\text{Premise} \\\\\n(2)\\quad & C(a) \\land \u00acB(a) && \\text{Existential instantiation (1)} \\\\\n(3)\\quad & C(a) && \\text{Simplification (2)} \\\\\n(4)\\quad & \\forall x (C(x) \\rightarrow P(x)) && \\text{Premise} \\\\\n(5)\\quad & C(a) \\rightarrow P(a) && \\text{Universal instantiation (4)} \\\\\n(6)\\quad & P(a) && \\text{Modus ponens (3, 5)} \\\\\n(7)\\quad & \u00acB(a) && \\text{Simplification (2)} \\\\\n(8)\\quad & P(a) \\land \u00acB(a) && \\text{Conjunction (6, 7)} \\\\\n(9)\\quad & \\exists x (P(x) \\land \u00acB(x)) && \\text{Existential generalization (8)}\n\\end{align}",
            "title": "Rules of Inference for Quantified Statements"
        }
    ]
}